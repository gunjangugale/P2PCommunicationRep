I am File 1 for Peer 1 Project Proposal for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: The goal of this project is to build a Peer to Peer Multithreaded system and understand the functionalities of operating system architecture involved. We plan to use the TCP connection for communication, and C++ as the programming language. The final product delivery will be due at the end of the semester. The contents of this document will show some details of the software product as proposed by the team. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files. Project Report for Peer-to-peer Communication By Sonal Rana, Gunjan Gugale Objective: In this project, we have implemented a simple Peer-to-Peer File Sharing Application using TCP Socket Programming. The application will be designed as a hybrid version of client-server and P2P programming models and by using threads. Project Description: What is peer-to-peer network? A peer-to-peer (abbreviated to P2P) computer network is one in which each computer in the network can act as a client or server for the other computers in the network. It allows shared access to various resources without the need for a central server. In contrast to client- server networks there is no dedicated server in peer-to-peer architecture. Thus each computer in such a network is part server and part client. In a P2P system, peers form an overlay network among each other. A logical channel between two peers can be established in the overlay without direct physical links between those peers. The overlay network abstracts away the details of the underlying physical network, which enables the rapid deployment of P2P systems in the current Internet. To be a part of the overlay and participate in the system, a peer should install special software. The software has two main modules a P2P substrate and a P2P application. A middleware module may also exist. The P2P substrate is responsible for constructing and managing the overlay as well as locating files. The P2P application module implements the functions needed by the specific service provided by the system. The middleware module provides the application with auxiliary functions (e.g., selecting good peers) that may enhance the quality and the performance of the P2P application. A peer-to-peer network uses a client-server setup. Network hardware and software needs to be installed on all PCs to be connected to the network. The network can be wireless with small workgroups of a maximum 16 PCs. The PCs can be disconnected when not required. In this system, there is no dedicated operating system, the PCs are workstations equipped with operating system that helps to share, store resources with each other. A peer-to-peer operating system allows individual users to define, which drives can be shared. The work group cannot access those not defined by the user as sharable resources. Figure 1 Communication between Peers in a network File Sharing system File sharing is the simplest and the most widely-deployed application in P2P systems. A file-sharing application uses the P2P substrate to discover peers who have a requested file. Once one or more supplying peers have been found, connections are established between the supplier(s) and the requester. The application does not do more than storing and providing files to requesting peers. Most of the currently deployed file-sharing applications use unstructured P2P substrates. This is because (as described in Section 2.1) unstructured P2P substrates support searching by keywords and tolerate the transient behavior of peers. Peer-to-peer file sharing network certainly has several important advantages over conventional client-server model • All the resources and contents are shared by all the peers, unlike server-client architecture where Server shares all the contents and resources. • P2P is more reliable as central dependency is eliminated. Failure of one peer doesn’t affect the functioning of other peers. In case of Client –Server network, if server goes down whole network gets affected. • There is no need for full-time System Administrator. Every user is the administrator of his machine. User can control their shared resources. • The over-all cost of building and maintaining this type of network is comparatively very less. Peer-to-peer networks have many disadvantages: • In this network, the whole system is decentralized thus it is difficult to administer. That is one person cannot determine the whole accessibility setting of whole network. • Security in this system is very less. Viruses, spywares, trojan, etc malwares can easily transmit over this P-2-P architecture. • Data recovery or backup is very difficult. Each computer should have its own back-up system • Since every peer can act as a server or client, there can be synchronization issues. Centralized Multi-­threaded Server A centralized server will listen on a certain port for incoming connection requests from peers. It will create a separate thread and a socket for each thread and the connection will be active as long as peers are online. The server will provide the following functionalities to the peers: Register peers: The Server will keep track of the peer information by keeping certain data structures. Upon A registration request from a peer, the server will create a new entry on the online peers list with the peer’s IP, File list <filename, size, type> and a unique id created by the server. Search files: Peers will make a search request for a certain file they are looking for to the centralized server. The Centralized server will search on its data structures and return a list of peers (along With their IPs) that have the file requested to the requesting peer. Update File list: When a download takes place, the downloading peer informs the server that it has a new file added to its shared folder and the server will make a change in the file list of the peer. Delete peer: When a peer wishes to be offline, it sends a delete request to the server. The Server deletes all information regarding the peer from its data structures. Peer Client Peer Client can interact with the centralized server and other peers. It registers itself with the centralized server by providing its IP and file list that it wants to share. The Peer client can search for a certain file and when the server responds with the list of peers who have the file, the peer client selects one of the peers and makes a connection request to the peer to download the file. Do Not forget while one download is in progress, the peer client may have other search requests and download operations. The Peer client should have a GUI To connect, search for files; list peers and monitor download activity. When the user wants to quit, the client will send a message to the centralized server and disable any incoming download requests. However it cannot quit until all the ongoing upload/download operations are finished. Peer Server When a peer registers with the centralized server, it also launches a peer server to serve download requests coming from other peers. The Peer server will be multi-threaded and will be able to serve more than one peer at the same time. It will listen for incoming connections and send requested files.  